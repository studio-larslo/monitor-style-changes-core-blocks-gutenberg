name: Watch Release Changes

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at 00:00 UTC every day
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode'
        type: boolean
        default: true
      base_tag:
        description: 'Base release tag (older)'
        required: false
        type: string
      head_tag:
        description: 'Head release tag (newer)'
        required: false
        type: string
      target_repo:
        description: 'Target repository (owner/repo)'
        required: false
        default: 'WordPress/gutenberg'
        type: string

jobs:
  monitor-releases:
    runs-on: ubuntu-latest
    steps:
      - name: Check out monitoring repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub packaging

      - name: Run monitoring script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEST_MODE: ${{ inputs.test_mode || 'false' }}
          BASE_TAG: ${{ inputs.base_tag }}
          HEAD_TAG: ${{ inputs.head_tag }}
          TARGET_REPO: ${{ inputs.target_repo }}
          # Optional notification settings
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        run: python scripts/monitor_changes.py

      - name: Create Issue on Changes
        if: ${{ success() && hashFiles('changes_report.md') != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('changes_report.md', 'utf8');
            const title = `Release Changes: ${process.env.HEAD_TAG || 'Latest Release'}`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: report,
              labels: ['release-changes']
            });
